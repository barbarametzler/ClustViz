name: CI testing

on: [push]

jobs:

  windows_job:
    name: Windows job
    runs-on: [windows-latest]
    strategy:
      max-parallel: 3
      matrix:
        python-version: ["3.6", "3.7", "3.8"]

    steps:
    - name: setup-msbuild # install Visual Studio Code
      uses: microsoft/setup-msbuild@v1

    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r tests/test_requirements.txt

    - name: Download conda-metis
      run: |
        iwr https://github.com/guglielmosanchini/conda-metis/archive/master.zip -OutFile conda-metis-master.zip
        Add-Type -A 'System.IO.Compression.FileSystem'; [IO.Compression.ZipFile]::ExtractToDirectory('conda-metis-master.zip', '.')

    - name: Generate VS files
      run: |
        cd conda-metis-master
        ./prova.bat # moved upwards
        ./vsgen.bat

    - name: Build with Visual Studio Code (this step fails but it doesnt matter)
      run: |
        cd conda-metis-master/build/windows
        MSBuild.exe METIS.sln /p:Configuration=Release
        exit 0

    - name: Perform tests (coveralls is skipped, replaced by codecov below)
      if: always() # otherwise it would not be executed, since the previous step failed
      run: |
        python -m pytest --cov=clustviz/ --cov-report xml  --flake8
        # python -m coveralls
      env:
        METIS_DLL: D:\a\ClustViz\ClustViz\conda-metis-master\build\windows\libmetis\Release\metis.dll
        # COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }} # it isnt needed on TravisCI

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1

  unix_job:
    name: Unix job
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 3
      matrix:
        os: ['ubuntu-latest', 'macos-latest']
        python-version: ["3.6", "3.7", "3.8"]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r tests/test_requirements.txt

      - name: Download metis from website
        run: |
          wget http://glaros.dtc.umn.edu/gkhome/fetch/sw/metis/metis-5.1.0.tar.gz
          gunzip metis-5.1.0.tar.gz
          tar -xvf metis-5.1.0.tar
          rm metis-5.1.0.tar

      - name: Make
        run: |
          cd metis-5.1.0
          make config shared=1
          make

      - name: setting env
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
        # echo "::set-env name=METIS_DLL::$GITHUB_WORKSPACE/metis-5.1.0/build/Linux-x86_64/libmetis/libmetis.so"
            echo "METIS_DLL=$GITHUB_WORKSPACE/metis-5.1.0/build/Linux-x86_64/libmetis/libmetis.so" >> $GITHUB_ENV
          elif [ "$RUNNER_OS" == "macOS" ]; then
            echo "::set-env name=METIS_DLL::$GITHUB_WORKSPACE/metis-5.1.0/build/Darwin-x86_64/libmetis/libmetis.dylib"
          else
            echo "$RUNNER_OS not supported"
            exit 1
          fi

      - name: Perform tests (coveralls is skipped, replaced by codecov below)
        # env:
          # COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }} # it isnt needed on TravisCI
        if: always() # otherwise it would not be executed, since the previous step failed
        run: |
          python3 -m pytest --cov=clustviz/ --cov-report xml  --flake8
          # python3 -m coveralls

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1

      - name: Build distribution
        if: (matrix.os == 'ubuntu-latest') && (matrix.python-version == '3.6') && (startsWith(github.ref, 'refs/tags') == true)
        run: |
          python -m pip install setuptools wheel
          python setup.py sdist bdist_wheel

      - name: Publish to Test PyPI # only if pushed commit is tagged, remember to change version in setup.py
        if: (matrix.os == 'ubuntu-latest') && (matrix.python-version == '3.6') && (startsWith(github.ref, 'refs/tags') == true)
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.test_pypi_password }}
          repository_url: https://test.pypi.org/legacy/
